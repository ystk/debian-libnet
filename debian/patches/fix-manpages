From: Stefanos Harhalakis <v13@v13.gr>
Subject: Fix various manpage issues.

Index: libnet-1.1.6/doc/man/man3/libnet-functions.h.3
===================================================================
--- libnet-1.1.6.orig/doc/man/man3/libnet-functions.h.3	2012-03-29 22:19:18.000000000 +0100
+++ libnet-1.1.6/doc/man/man3/libnet-functions.h.3	2012-06-21 22:05:45.126551531 +0100
@@ -514,7 +514,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
@@ -531,7 +531,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
@@ -558,7 +558,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-the number of bytes written, or -1 on failure 
+the number of bytes written, or \-1 on failure 
 .RE
 .PP
 
@@ -575,7 +575,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-the number of bytes written, or -1 on failure 
+the number of bytes written, or \-1 on failure 
 .RE
 .PP
 
@@ -598,7 +598,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -615,7 +615,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -642,7 +642,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -661,7 +661,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -682,7 +682,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -701,7 +701,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -730,7 +730,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -749,7 +749,7 @@
 .PP
 It is important to note that some functions (notably the IPv6 builders) do use the payload interface to specify variable length but ostensibly non-optional data. See the individual libnet_build_ipv6*() functions for more information.
 .SS "Protocol Tags and Packet Builder Return Values"
-Libnet uses the protocol tag (ptag) to identify individual pieces of a packet after being created. A new ptag results every time a libnet_build() function with an empty (0) ptag argument completes successfully. This new ptag now refers to the packet piece just created. The application programmer's responsibility is to save this value if he or she plans to modify this particular portion later on in the program. If the application programmer needs to modify some portion of that particular packet piece again, he or she calls the same libnet_build() function specifying the saved ptag argument. Libnet then searches for that packet piece and modifies it rather than creating a new one. Upon failure for any reason, libnet_build() functions return -1; \fBlibnet_geterror()\fP tells you why. Builds an IEEE 802.1q VLAN tagging header. Depending on the value of len_proto, the function wraps the 802.1q header inside either an IEEE 802.3 header or an RFC 894 Ethernet II (DIX) header (both resulting in an 18-byte frame). If len is 1500 or less, most receiving protocol stacks parse the frame as an IEEE 802.3 encapsulated frame. If len is one of the Ethernet type values, most protocol stacks parse the frame as an RFC 894 Ethernet II encapsulated frame. Note the length value is calculated without the 802.1q header of 18 bytes. 
+Libnet uses the protocol tag (ptag) to identify individual pieces of a packet after being created. A new ptag results every time a libnet_build() function with an empty (0) ptag argument completes successfully. This new ptag now refers to the packet piece just created. The application programmer's responsibility is to save this value if he or she plans to modify this particular portion later on in the program. If the application programmer needs to modify some portion of that particular packet piece again, he or she calls the same libnet_build() function specifying the saved ptag argument. Libnet then searches for that packet piece and modifies it rather than creating a new one. Upon failure for any reason, libnet_build() functions return \-1; \fBlibnet_geterror()\fP tells you why. Builds an IEEE 802.1q VLAN tagging header. Depending on the value of len_proto, the function wraps the 802.1q header inside either an IEEE 802.3 header or an RFC 894 Ethernet II (DIX) header (both resulting in an 18-byte frame). If len is 1500 or less, most receiving protocol stacks parse the frame as an IEEE 802.3 encapsulated frame. If len is one of the Ethernet type values, most protocol stacks parse the frame as an RFC 894 Ethernet II encapsulated frame. Note the length value is calculated without the 802.1q header of 18 bytes. 
 .PP
 \fBParameters:\fP
 .RS 4
@@ -778,7 +778,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -803,7 +803,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -828,7 +828,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -857,7 +857,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -882,7 +882,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -919,7 +919,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -944,7 +944,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -967,7 +967,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -996,7 +996,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1027,7 +1027,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1072,7 +1072,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1103,7 +1103,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1122,7 +1122,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1167,7 +1167,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1200,7 +1200,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1234,7 +1234,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1259,7 +1259,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1294,7 +1294,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1328,7 +1328,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1341,7 +1341,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1366,7 +1366,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1405,7 +1405,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1434,7 +1434,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1465,7 +1465,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1492,7 +1492,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1519,7 +1519,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1554,7 +1554,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1579,7 +1579,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1608,7 +1608,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1637,7 +1637,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1664,7 +1664,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1685,7 +1685,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1710,7 +1710,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1737,12 +1737,12 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error
+protocol tag value on success, \-1 on error
 .RE
 .PP
 \fBNote:\fP
 .RS 4
-'reserved' was previously called 'code', which it is not, in any IGMP version. 
+\&'reserved' was previously called 'code', which it is not, in any IGMP version. 
 .RE
 .PP
 
@@ -1773,7 +1773,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1798,7 +1798,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1823,7 +1823,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1860,7 +1860,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1883,7 +1883,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1916,7 +1916,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1939,7 +1939,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1966,7 +1966,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -1989,7 +1989,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2016,7 +2016,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2053,7 +2053,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2080,7 +2080,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2107,7 +2107,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2147,7 +2147,7 @@
 .br
 \fIrec_ts_int\fP receiver timestamp integer 
 .br
-\fIrec_ts_frac\fP reciever timestamp fraction 
+\fIrec_ts_frac\fP receiver timestamp fraction 
 .br
 \fIxmt_ts_int\fP transmit timestamp integer 
 .br
@@ -2164,7 +2164,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2193,7 +2193,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2218,7 +2218,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2249,7 +2249,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2282,7 +2282,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2307,7 +2307,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2328,7 +2328,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2359,7 +2359,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2382,7 +2382,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2405,7 +2405,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2424,7 +2424,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2461,7 +2461,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2502,7 +2502,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2543,7 +2543,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2586,7 +2586,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2611,7 +2611,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2648,7 +2648,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2667,7 +2667,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2704,7 +2704,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2731,7 +2731,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2766,7 +2766,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-protocol tag value on success, -1 on error 
+protocol tag value on success, \-1 on error 
 .RE
 .PP
 
@@ -2789,7 +2789,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
@@ -2947,7 +2947,7 @@
 .RE
 .PP
 
-.SS "uint32_t libnet_get_ipaddr4 (libnet_t *l)"Returns the IP address for the device libnet was initialized with. If libnet was initialized without a device (in raw socket mode) the function will attempt to find one. If the function fails and returns -1 a call to libnet_geterrror() will tell you why. 
+.SS "uint32_t libnet_get_ipaddr4 (libnet_t *l)"Returns the IP address for the device libnet was initialized with. If libnet was initialized without a device (in raw socket mode) the function will attempt to find one. If the function fails and returns \-1 a call to libnet_geterrror() will tell you why. 
 .PP
 \fBParameters:\fP
 .RS 4
@@ -2956,7 +2956,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-a big endian IP address suitable for use in a libnet_build function or -1 
+a big endian IP address suitable for use in a libnet_build function or \-1 
 .RE
 .PP
 
@@ -2982,7 +2982,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
@@ -3137,7 +3137,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-network byte ordered IPv4 address or -1 (2^32 - 1) on error 
+network byte ordered IPv4 address or \-1 (2^32 - 1) on error 
 .RE
 .PP
 
@@ -3167,7 +3167,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
@@ -3193,11 +3193,11 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
-.SS "int libnet_plist_chain_new (libnet_t *l, libnet_plist_t **plist, char *token_list)"Creates a new port list. Port list chains are useful for TCP and UDP-based applications that need to send packets to a range of ports (contiguous or otherwise). The port list chain, which token_list points to, should contain a series of int8_tacters from the following list: '0123456789,-' of the general format 'x - y, z', where 'xyz' are port numbers between 0 and 65,535. plist points to the front of the port list chain list for use in further libnet_plist_chain() functions. Upon success, the function returns 1. Upon failure, the function returns -1 and \fBlibnet_geterror()\fP can tell you why. 
+.SS "int libnet_plist_chain_new (libnet_t *l, libnet_plist_t **plist, char *token_list)"Creates a new port list. Port list chains are useful for TCP and UDP-based applications that need to send packets to a range of ports (contiguous or otherwise). The port list chain, which token_list points to, should contain a series of int8_tacters from the following list: '0123456789,-' of the general format 'x - y, z', where 'xyz' are port numbers between 0 and 65,535. plist points to the front of the port list chain list for use in further libnet_plist_chain() functions. Upon success, the function returns 1. Upon failure, the function returns \-1 and \fBlibnet_geterror()\fP can tell you why. 
 .PP
 \fBParameters:\fP
 .RS 4
@@ -3210,11 +3210,11 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
-.SS "int libnet_plist_chain_next_pair (libnet_plist_t *plist, uint16_t *bport, uint16_t *eport)"Returns the next port list chain pair from the port list chain plist. bport and eport contain the starting port number and ending port number, respectively. Upon success, the function returns 1 and fills in the port variables; however, if the list is empty, the function returns 0 and sets both port variables to 0. Upon failure, the function returns -1. 
+.SS "int libnet_plist_chain_next_pair (libnet_plist_t *plist, uint16_t *bport, uint16_t *eport)"Returns the next port list chain pair from the port list chain plist. bport and eport contain the starting port number and ending port number, respectively. Upon success, the function returns 1 and fills in the port variables; however, if the list is empty, the function returns 0 and sets both port variables to 0. Upon failure, the function returns \-1. 
 .PP
 \fBParameters:\fP
 .RS 4
@@ -3227,7 +3227,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, 0 if empty, -1 on failure 
+1 on success, 0 if empty, \-1 on failure 
 .RE
 .PP
 
@@ -3240,7 +3240,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
@@ -3267,7 +3267,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-1 on success, -1 on failure 
+1 on success, \-1 on failure 
 .RE
 .PP
 
@@ -3288,7 +3288,7 @@
 .PP
 \fBReturns:\fP
 .RS 4
-the number of bytes written, -1 on error 
+the number of bytes written, \-1 on error 
 .RE
 .PP
 
